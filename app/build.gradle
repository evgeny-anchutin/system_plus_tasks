apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.systemplus"
        minSdkVersion 24
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
    kapt { generateStubs = true }
    dataBinding { enabled = true }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$ver_kotlin"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$ver_coroutines"

    implementation "androidx.multidex:multidex:2.0.1"
    implementation 'androidx.core:core-ktx:1.0.2'
    implementation 'androidx.appcompat:appcompat:1.1.0-beta01'
    implementation 'androidx.recyclerview:recyclerview:1.1.0-alpha06'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation "androidx.constraintlayout:constraintlayout:2.0.0-beta1"

    kapt "com.github.e16din:screensadapter-compiler:$ver_screens_adapter"
    implementation "com.github.e16din:screensadapter-annotation:$ver_screens_adapter"
    implementation "com.github.e16din:screensadapter:$ver_screens_adapter"
    implementation "com.github.e16din:screensmodel:$ver_screens_adapter"

    implementation "com.squareup.retrofit2:retrofit:$ver_retrofit" // Apache 2.0
    implementation "com.squareup.retrofit2:converter-gson:$ver_retrofit" // Apache 2.0
    implementation "com.squareup.okhttp3:okhttp:$ver_okhttp" // Apache 2.0
    implementation "com.squareup.okhttp3:logging-interceptor:$ver_okhttp" // Apache 2.0
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2"
}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion "$ver_support"
            }
        }
    }
}
